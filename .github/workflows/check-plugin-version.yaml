name: TS Plugin Workers Version Check

on:
  pull_request:
    paths:
      - 'src/**'
    branches: [main]
    types: [opened, synchronize, labeled, unlabeled]
  workflow_dispatch:

jobs:
  version-check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v2

      - name: Check for "skip-version-check" label
        id: check_label
        shell: bash
        run: |
          SKIP_VERSION_BUMP=${{contains(github.event.pull_request.labels.*.name, 'skip-version-check') }}
          if $SKIP_VERSION_BUMP; then
            echo "Skip version check label found."
          else
            exit 1 
          fi
        continue-on-error: true

      - name: Get base branch version
        shell: bash
        if: steps.check_label.outcome == 'failure'
        run: |
          git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
          echo "BASE_VERSION=$(git show origin/${{ github.base_ref }}:package.json | node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Get PR branch version
        shell: bash
        if: steps.check_label.outcome == 'failure'
        run: |
          echo "PR_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if version is bumped
        id: check_bump
        shell: bash
        if: steps.check_label.outcome == 'failure'
        run: |
          echo "Comparing base version $BASE_VERSION to the current version $PR_VERSION."
          COMPARABLE_BASE_VERSION=$($GITHUB_WORKSPACE/scripts/ci/parse_version.sh $BASE_VERSION)
          COMPARABLE_PR_VERSION=$($GITHUB_WORKSPACE/scripts/ci/parse_version.sh $PR_VERSION)
          if $COMPARABLE_BASE_VERSION -lt $COMPARABLE_PR_VERSION; then
            echo "Version bumped in package.json."
          else
            echo "Error: The version in package.json has not been bumped."
            exit 1
          fi

      - name: Add comment if version is not bumped
        if: failure()
        shell: bash
        run: |
          MESSAGE="Error: The version in package.json has not been bumped."
          echo $MESSAGE
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

      - name: Post comment
        if: failure()
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const message = process.env.MESSAGE;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
