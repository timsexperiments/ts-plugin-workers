name: 'Check Version Bump'
description: 'Checks if the package.json was bumped from the previous version.'

inputs:
  project_path:
    description: 'The base path to the project files.'
    required: true
  source_path:
    description: 'The path of the source content for the package.'
    required: false
    default: src

outputs:
  bumped:
    description: 'Whether the version was bumped.'
    value: ${{ steps.set-output.outputs.bumped }}

runs:
  using: 'composite'
  steps:
    - name: Check for src changes
      id: check-src
      uses: ./.github/actions/check-changes
      with:
        path: ${{ inputs.project_path }}/${{ inputs.source_path }}

    - name: Check for "skip-version-check" label
      id: check-label
      if: steps.check-src.outputs.found-changes == 0
      shell: bash
      run: |
        SKIP="${{ contains(github.event.pull_request.labels.*.name, 'skip-version-check') }}"
        echo "skip-checks=$(echo $SKIP)" >> $GITHUB_OUTPUT

    - name: Get base branch version
      if: steps.check-label.outputs.skip-checks == 'false'
      shell: bash
      run: |
        git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
        echo "BASE_VERSION=$(git show origin/${{ github.base_ref }}:${{ inputs.project_path }}/package.json | node -p "require('./${{ inputs.project_path }}/package.json').version")" >> $GITHUB_ENV

    - name: Get PR branch version
      if: steps.check-label.outputs.skip-checks == 'false'
      shell: bash
      run: |
        echo "PR_VERSION=$(node -p "require('./${{ inputs.project_path }}/package.json').version")" >> $GITHUB_ENV

    - name: Set output
      id: set-output
      shell: bash
      run: |
        echo "bumped=0" >> $GITHUB_OUTPUT
        if ${{ steps.check-src }} == 0; then
          echo "bumped=1" >> $GITHUB_OUTPUT
        fi
        if ${{ steps.check-label.outputs.skip-checks }} == true; then
          echo "bumped=1" >> $GITHUB_OUTPUT
        fi

    - name: Check if version is bumped
      id: check_bump
      if: steps.check-label.outputs.skip-checks == 'false'
      shell: bash
      run: |
        echo "Comparing base version $BASE_VERSION to the current version $PR_VERSION."
        COMPARABLE_BASE_VERSION=$($GITHUB_WORKSPACE/scripts/ci/parse_version.sh $BASE_VERSION)
        COMPARABLE_PR_VERSION=$($GITHUB_WORKSPACE/scripts/ci/parse_version.sh $PR_VERSION)
        if $COMPARABLE_BASE_VERSION -lt $COMPARABLE_PR_VERSION; then
          echo "Version bumped in package.json."
        else
          echo "Error: The version in package.json has not been bumped."
          exit 1
        fi
